<?php
/** NOTE **
 ** Make sure that <?php is the FIRST line of this file!
 ** IE: There should NOT be any blank lines or spaces BEFORE <?php
 **/

 /*********************************************
  * Useful important configuration overrides  *
  *********************************************/

 /* If you are asked to put PLA in debug mode, this is how you do it: */
 $config->custom->debug['level'] = 0;
 $config->custom->debug['syslog'] = true;
 #  $config->custom->debug['file'] = '/tmp/pla_debug.log';

/**
 * The phpLDAPadmin config file
 * See: http://phpldapadmin.sourceforge.net/wiki/index.php/Config.php
 */

/* The temporary storage directory where we will put jpegPhoto data
   This directory must be readable and writable by your web server. */
 $config->custom->jpeg['tmpdir'] = '/var/www/tmp';

 /* phpLDAPadmin can encrypt the content of sensitive cookies if you set this
   to a big random string. */

/*
 * Autogenerated value will be automatically added by docker-entrypoint.sh
 */
 $config->custom->session['blowfish'] = '{{ PHPLDAPADMIN_CONFIG_BLOWFISH }}';


/*********************************************
 * Appearance                                *
 *********************************************/
/* Hide the warnings for invalid objectClasses/attributes in templates. */
$config->custom->appearance['hide_template_warning'] = true;



/*********************************************
 * User-friendly attribute translation       *
 *********************************************/

/* Use this array to map attribute names to user friendly names. For example, if
   you don't want to see "facsimileTelephoneNumber" but rather "Fax". */
// $config->custom->appearance['friendly_attrs'] = [];
$config->custom->appearance['friendly_attrs'] = [
	'facsimileTelephoneNumber' => 'Fax',
	'gid'                      => 'Group',
	'mail'                     => 'Email',
	'telephoneNumber'          => 'Telephone',
	'uid'                      => 'User Name',
	'userPassword'             => 'Password'
];


/*********************************************
 * Define your LDAP servers in this section  *
 *********************************************/

$servers = new Datastore();

$jsonConfig = json_decode(getenv('PHPLDAPADMIN_LDAP_HOSTS'), true);

/*
 * [
 *    {
 *        "ldap-server": [
 *          { "server": [{ "tls": true }] },
 *          { "login": [{ "bind_id": "cn=admin,dc=example,dc=org" }] }
 *        ]
 *    }
 * ]
 */

foreach ($jsonConfig as $serverConfigs) {
    $servers->newServer('ldap_pla');
    foreach ($serverConfigs as $hostName => $serverConfig) {
        // Set default values, they can be overridden
        $servers->setValue('server','name','LDAP Server');
        $servers->setValue('server','host', $hostName);
        foreach ($serverConfig as $valuesBlocks) { // "ldap-server": [$valuesBlocks...]
            foreach ($valuesBlocks as $keyBlock => $valueBlock) { // [{ "server": [{ "tls": true }] }] = [$keyBlock: $valueBlock]
                foreach ($valueBlock as $valueKeySet) { // [{ "tls": true }] = {$keyBlock: [$valueKeySet]}
                    foreach ($valueKeySet as $key => $value) { // { "tls": true } = { $key: $value }
                        $servers->setValue($keyBlock, $key, $value);
                    }
                }
            }
        }
    }
}
